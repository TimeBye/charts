{{- $core := .Values.persistence.persistentVolumeClaim.core -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "gitlab.core" . }}"
  labels:
{{ include "gitlab.labels" . | indent 4 }}
    component: gitlab
spec:
  replicas: {{ .Values.core.replicas }}
  serviceName: {{ include "gitlab.core.serviceName" . }}
  selector:
    matchLabels:
{{ include "gitlab.matchLabels" . | indent 6 }}
      component: gitlab
  template:
    metadata:
      labels:
{{ include "gitlab.labels" . | indent 8 }}
        component: gitlab
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/core/core-secret.yaml") . | sha256sum }}
{{- if .Values.core.podAnnotations }}
{{ toYaml .Values.core.podAnnotations | indent 8 }}
{{- end }}
    spec:
      enableServiceLinks: false
      containers:
      - name: gitlab
        image: "{{ .Values.core.image.repository }}:{{ .Values.core.image.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        envFrom:
        - secretRef:
            name: {{ include "gitlab.core" . }}
        livenessProbe:
          httpGet:
            path: /help
            scheme: HTTP
            port: 80
          initialDelaySeconds: 600
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /help
            scheme: HTTP
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
{{ toYaml .Values.core.resources | indent 10 }}
        ports:
        - name: ssh
          containerPort: 22
        - name: http
          containerPort: 80
        volumeMounts:
        - name: data
          mountPath: /home/git/data
          subPath: {{ $core.subPath }}
      {{- if not .Values.persistence.enabled }}
      volumes:
      - name: data
        emptyDir: {}
      {{- else if $core.existingClaim }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ $core.existingClaim }}
      {{- end -}}
      {{- if and .Values.persistence.enabled (not $core.existingClaim) }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "gitlab.core" . }}
      {{- end -}}
    {{- with .Values.core.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      affinity:
      {{- if eq .Values.core.affinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
{{ include "gitlab.matchLabels" . | indent 18 }}
                  component: gitlab
      {{- else if eq .Values.core.affinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
{{ include "gitlab.matchLabels" . | indent 18 }}
                  component: gitlab
      {{- end }}
    {{- with .Values.core.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}