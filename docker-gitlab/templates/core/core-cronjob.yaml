{{- if ne .Values.core.env.GITLAB_BACKUP_SCHEDULE "disable" -}}
{{- $core := .Values.persistence.persistentVolumeClaim.core -}}
{{- $ingress := .Values.expose.ingress -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ include "gitlab.core" . }}-backup-scheduled"
  labels:
{{ include "gitlab.labels" . | indent 4 }}
    component: gitlab-backup-scheduled
spec:
  concurrencyPolicy: Forbid
  schedule: "{{ include "gitlab.core.backupSchedule" . }}"
  jobTemplate:
    metadata:
      labels:
{{ include "gitlab.labels" . | indent 8 }}
        component: gitlab-backup-scheduled
    spec:
      template: 
        spec:
          enableServiceLinks: false
          restartPolicy: Never
          containers:
          - name: gitlab
            image: "{{ .Values.core.image.repository }}:{{ .Values.core.image.tag }}"
            imagePullPolicy: {{ .Values.imagePullPolicy }}
            command:
            - /bin/bash
            - -c
            - |
              /sbin/entrypoint.sh app:init >/dev/null
              /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf >/dev/null &
              SUPERVISOR_PID=$!
              /sbin/entrypoint.sh app:rake gitlab:backup:create RAILS_ENV=production SKIP=${GITLAB_BACKUP_SKIP}
              kill -15 $SUPERVISOR_PID >/dev/null
              if ps h -p $SUPERVISOR_PID > /dev/null ; then
              wait $SUPERVISOR_PID || true
              fi
            envFrom:
            - secretRef:
                name: {{ include "gitlab.core" . }}
            volumeMounts:
            - name: data
              mountPath: /home/git/data
              subPath: {{ $core.subPath }}
          {{- if not .Values.persistence.enabled }}
          volumes:
          - name: data
            emptyDir: {}
          {{- else if $core.existingClaim }}
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: {{ $core.existingClaim }}
          {{- end -}}
          {{- if and .Values.persistence.enabled (not $core.existingClaim) }}
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: {{ include "gitlab.core" . }}
          {{- end -}}
        {{- with .Values.core.nodeSelector }}
          nodeSelector:
    {{ toYaml . | indent 8 }}
        {{- end }}
          affinity:
          {{- if eq .Values.core.affinity "hard" }}
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - topologyKey: "kubernetes.io/hostname"
                  labelSelector:
                    matchLabels:
{{ include "gitlab.matchLabels" . | indent 22 }}
                      component: gitlab
          {{- else if eq .Values.core.affinity "soft" }}
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                podAffinityTerm:
                  topologyKey: kubernetes.io/hostname
                  labelSelector:
                    matchLabels:
{{ include "gitlab.matchLabels" . | indent 22 }}
                      component: gitlab
      {{- end }}
        {{- with .Values.core.tolerations }}
          tolerations:
    {{ toYaml . | indent 8 }}
        {{- end }}
{{- end }}